[["Map",1,2,9,10],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.15.1","content-config-digest","3b2a139643557f65","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://yourdomain.com\",\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"server\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"index.js\",\"redirects\":false,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[],\"responsiveStyles\":false},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":{\"type\":\"shiki\",\"excludeLangs\":[\"math\"]},\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true,\"allowedDomains\":[]},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false,\"liveContentCollections\":false,\"csp\":false,\"staticImportMetaEnv\":false,\"chromeDevtoolsWorkspace\":false,\"failOnPrerenderConflict\":false},\"legacy\":{\"collections\":false},\"session\":{\"driver\":\"cloudflare-kv-binding\",\"options\":{\"binding\":\"SESSION\"}}}","blog",["Map",11,12,134,135],"postgres-cheatsheet",{"id":11,"data":13,"body":22,"filePath":23,"digest":24,"rendered":25,"legacyId":133},{"title":14,"description":15,"pubDate":16,"tags":17},"PostgreSQL Cheat Sheet for Front-End Developers","A practical guide to PostgreSQL for developers who know React better than databases",["Date","2025-10-27T00:00:00.000Z"],[18,19,20,21],"postgres","sql","database","tutorial","> A practical guide to PostgreSQL for developers who know React better than databases\n\n## Table of Contents\n- [Data Types](#data-types)\n- [CREATE TABLE](#create-table)\n- [Primary Keys](#primary-keys)\n- [Foreign Keys](#foreign-keys)\n- [Constraints](#constraints)\n- [CRUD Operations](#crud-operations)\n- [Indexes](#indexes)\n- [ALTER TABLE](#alter-table)\n- [DROP TABLE](#drop-table)\n- [UUID Functions](#uuid-functions)\n\n---\n\n## Data Types\n\nThink of these like TypeScript types:\n\n```sql\n-- Strings\nVARCHAR(50)      -- string with max length\nTEXT             -- string (unlimited)\n\n-- Numbers\nINTEGER          -- number (whole numbers: -2147483648 to 2147483647)\nBIGINT           -- number (bigger whole numbers)\nDECIMAL(10,2)    -- number (10 digits total, 2 after decimal)\nREAL             -- number (floating point)\nSERIAL           -- number (auto-incrementing integer)\n\n-- Booleans\nBOOLEAN          -- boolean (true/false)\n\n-- Dates\nTIMESTAMP        -- Date (with time)\nDATE             -- Date (no time)\nTIME             -- Time (no date)\n\n-- JSON\nJSON             -- any (stores JSON as text)\nJSONB            -- any (stores JSON binary, faster queries)\n\n-- UUIDs\nUUID             -- string (validated UUID format)\n\n-- Arrays\nINTEGER[]        -- number[] (array of integers)\nTEXT[]           -- string[] (array of text)\n```\n\n---\n\n## CREATE TABLE\n\n### Basic Table\n```sql\nCREATE TABLE users (\n    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n    username VARCHAR(50) UNIQUE NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    age INTEGER,\n    is_active BOOLEAN DEFAULT true,\n    created_at TIMESTAMP DEFAULT NOW()\n);\n```\n\n### Table with Foreign Key\n```sql\nCREATE TABLE posts (\n    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n    user_id UUID NOT NULL,\n    title TEXT NOT NULL,\n    content TEXT,\n    created_at TIMESTAMP DEFAULT NOW(),\n    FOREIGN KEY (user_id) REFERENCES users(id)\n);\n```\n\n### Junction Table (Many-to-Many)\n```sql\nCREATE TABLE user_roles (\n    user_id UUID,\n    role_id UUID,\n    assigned_at TIMESTAMP DEFAULT NOW(),\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(id)\n);\n```\n\n---\n\n## Primary Keys\n\n### Single Primary Key (Most Common)\n```sql\nCREATE TABLE users (\n    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n    username VARCHAR(50)\n);\n```\n\n### Composite Primary Key (Multiple Columns)\n```sql\nCREATE TABLE user_roles (\n    user_id UUID,\n    role_id UUID,\n    PRIMARY KEY (user_id, role_id)  -- BOTH together must be unique\n);\n```\n\n**Important:** \n- ❌ You CANNOT have multiple primary keys per table\n- ✅ You CAN have a primary key made of multiple columns (composite key)\n\n---\n\n## Foreign Keys\n\n### One-to-Many Relationship\n```sql\n-- One user has many posts\nCREATE TABLE users (\n    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n    username VARCHAR(50)\n);\n\nCREATE TABLE posts (\n    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n    user_id UUID NOT NULL,\n    title TEXT,\n    FOREIGN KEY (user_id) REFERENCES users(id)\n);\n```\n\n### Many-to-Many Relationship\n```sql\n-- Users have many roles, roles have many users\nCREATE TABLE users (\n    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n    username VARCHAR(50)\n);\n\nCREATE TABLE roles (\n    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n    name VARCHAR(50)\n);\n\n-- Junction table\nCREATE TABLE user_roles (\n    user_id UUID,\n    role_id UUID,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(id)\n);\n```\n\n### Foreign Key with Cascade\n```sql\nCREATE TABLE posts (\n    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n    user_id UUID NOT NULL,\n    title TEXT,\n    -- Delete posts when user is deleted\n    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE\n);\n```\n\n---\n\n## Constraints\n\n```sql\nCREATE TABLE users (\n    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n    \n    -- NOT NULL: Must have a value\n    username VARCHAR(50) NOT NULL,\n    \n    -- UNIQUE: No duplicates allowed\n    email VARCHAR(100) UNIQUE NOT NULL,\n    \n    -- CHECK: Custom validation\n    age INTEGER CHECK (age >= 18),\n    price DECIMAL(10,2) CHECK (price > 0),\n    \n    -- DEFAULT: Auto-fill if not provided\n    created_at TIMESTAMP DEFAULT NOW(),\n    is_active BOOLEAN DEFAULT true,\n    status VARCHAR(20) DEFAULT 'pending'\n);\n```\n\n---\n\n## CRUD Operations\n\n### CREATE (INSERT)\n\n```sql\n-- Single insert\nINSERT INTO users (username, email) \nVALUES ('ryan', 'ryan@example.com');\n\n-- Multiple inserts\nINSERT INTO users (username, email) \nVALUES \n    ('alice', 'alice@example.com'),\n    ('bob', 'bob@example.com'),\n    ('charlie', 'charlie@example.com');\n\n-- Insert and return the created row\nINSERT INTO users (username, email) \nVALUES ('dave', 'dave@example.com')\nRETURNING *;\n\n-- Insert and return specific columns\nINSERT INTO users (username, email) \nVALUES ('eve', 'eve@example.com')\nRETURNING id, username;\n```\n\n### READ (SELECT)\n\n```sql\n-- Get all rows\nSELECT * FROM users;\n\n-- Get specific columns\nSELECT username, email FROM users;\n\n-- Filter with WHERE\nSELECT * FROM users WHERE username = 'ryan';\nSELECT * FROM users WHERE age >= 18;\nSELECT * FROM users WHERE is_active = true;\n\n-- Multiple conditions (AND)\nSELECT * FROM users \nWHERE age >= 18 AND is_active = true;\n\n-- Multiple conditions (OR)\nSELECT * FROM users \nWHERE username = 'ryan' OR username = 'alice';\n\n-- IN clause (like array.includes())\nSELECT * FROM users \nWHERE username IN ('ryan', 'alice', 'bob');\n\n-- Pattern matching (LIKE)\nSELECT * FROM users WHERE email LIKE '%@gmail.com';\nSELECT * FROM users WHERE username LIKE 'r%';  -- Starts with 'r'\nSELECT * FROM users WHERE username LIKE '%an%'; -- Contains 'an'\n\n-- NOT\nSELECT * FROM users WHERE NOT is_active;\nSELECT * FROM users WHERE email NOT LIKE '%@gmail.com';\n\n-- NULL checks\nSELECT * FROM users WHERE phone IS NULL;\nSELECT * FROM users WHERE phone IS NOT NULL;\n\n-- Order by\nSELECT * FROM users ORDER BY created_at DESC;\nSELECT * FROM users ORDER BY username ASC;\nSELECT * FROM users ORDER BY age DESC, username ASC;\n\n-- Limit and offset (pagination)\nSELECT * FROM users LIMIT 10;\nSELECT * FROM users LIMIT 10 OFFSET 20;  -- Skip 20, get next 10\n\n-- Count\nSELECT COUNT(*) FROM users;\nSELECT COUNT(*) FROM users WHERE is_active = true;\n\n-- Distinct\nSELECT DISTINCT email FROM users;\n```\n\n### UPDATE\n\n```sql\n-- Update one field\nUPDATE users \nSET email = 'newemail@example.com' \nWHERE username = 'ryan';\n\n-- Update multiple fields\nUPDATE users \nSET email = 'new@example.com', is_active = false \nWHERE id = 'some-uuid-here';\n\n-- Update with calculation\nUPDATE users \nSET age = age + 1 \nWHERE username = 'ryan';\n\n-- Update all rows (BE CAREFUL!)\nUPDATE users SET is_active = true;\n\n-- Update and return modified rows\nUPDATE users \nSET email = 'new@example.com' \nWHERE username = 'ryan'\nRETURNING *;\n```\n\n### DELETE\n\n```sql\n-- Delete specific row\nDELETE FROM users WHERE username = 'ryan';\n\n-- Delete with condition\nDELETE FROM users WHERE created_at \u003C '2020-01-01';\nDELETE FROM users WHERE is_active = false;\n\n-- Delete all rows (BE VERY CAREFUL!)\nDELETE FROM users;\n\n-- Delete and return what was deleted\nDELETE FROM users \nWHERE username = 'ryan'\nRETURNING *;\n```\n\n---\n\n## Indexes\n\nIndexes make queries faster (like database performance optimization):\n\n```sql\n-- Create index on frequently queried column\nCREATE INDEX idx_users_email ON users(email);\n\n-- Unique index (enforces uniqueness like UNIQUE constraint)\nCREATE UNIQUE INDEX idx_users_username ON users(username);\n\n-- Composite index (multiple columns)\nCREATE INDEX idx_posts_user_created ON posts(user_id, created_at);\n\n-- Drop index\nDROP INDEX idx_users_email;\n\n-- Check if index exists\nDROP INDEX IF EXISTS idx_users_email;\n```\n\n**When to use indexes:**\n- ✅ Columns used in WHERE clauses frequently\n- ✅ Foreign key columns\n- ✅ Columns used in ORDER BY\n- ✅ Columns used in JOIN conditions\n- ❌ Small tables (overhead not worth it)\n- ❌ Columns that change frequently (slows down writes)\n\n---\n\n## ALTER TABLE\n\nModifying existing tables:\n\n```sql\n-- Add column\nALTER TABLE users ADD COLUMN phone VARCHAR(20);\nALTER TABLE users ADD COLUMN bio TEXT DEFAULT '';\n\n-- Drop column\nALTER TABLE users DROP COLUMN phone;\n\n-- Rename column\nALTER TABLE users RENAME COLUMN username TO user_name;\n\n-- Rename table\nALTER TABLE users RENAME TO app_users;\n\n-- Change column type\nALTER TABLE users ALTER COLUMN age TYPE BIGINT;\n\n-- Set default value\nALTER TABLE users ALTER COLUMN is_active SET DEFAULT true;\n\n-- Remove default value\nALTER TABLE users ALTER COLUMN is_active DROP DEFAULT;\n\n-- Add NOT NULL constraint\nALTER TABLE users ALTER COLUMN email SET NOT NULL;\n\n-- Remove NOT NULL constraint\nALTER TABLE users ALTER COLUMN email DROP NOT NULL;\n\n-- Add constraint\nALTER TABLE users ADD CONSTRAINT check_age CHECK (age >= 18);\nALTER TABLE users ADD CONSTRAINT unique_email UNIQUE (email);\n\n-- Drop constraint\nALTER TABLE users DROP CONSTRAINT check_age;\n```\n\n---\n\n## DROP TABLE\n\nDeleting tables:\n\n```sql\n-- Delete table and all data\nDROP TABLE users;\n\n-- Delete if exists (no error if doesn't exist)\nDROP TABLE IF EXISTS users;\n\n-- Delete with cascade (also delete dependent tables/constraints)\nDROP TABLE users CASCADE;\n```\n\n---\n\n## UUID Functions\n\n### Modern Way (PostgreSQL 13+)\n\n```sql\n-- Generate random UUID (v4)\nSELECT gen_random_uuid();\n-- Output: 550e8400-e29b-41d4-a716-446655440000\n\n-- Use in table\nCREATE TABLE users (\n    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n    username VARCHAR(50)\n);\n```\n\n### Legacy Way (Requires Extension)\n\n```sql\n-- Enable extension (only needed once per database)\nCREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";\n\n-- Generate UUIDs\nSELECT uuid_generate_v1();  -- Time-based (contains MAC address)\nSELECT uuid_generate_v4();  -- Random (same as gen_random_uuid)\n```\n\n### UUID Versions Explained\n\n**v1 (Time-based):**\n- Contains timestamp + MAC address\n- ✅ Sortable by time\n- ❌ Privacy leak (MAC address visible)\n\n**v4 (Random):**\n- Pure random\n- ✅ Secure and unpredictable\n- ✅ No privacy leaks\n- ❌ Not sortable\n\n**Recommendation:** Use `gen_random_uuid()` (v4) for modern apps!\n\n---\n\n## Frontend Dev Mental Model\n\nThink of databases like normalized Redux state:\n\n```javascript\n// Frontend (Redux)\nconst state = {\n  users: {\n    byId: {\n      '123': { id: '123', username: 'ryan', email: 'ryan@example.com' }\n    },\n    allIds: ['123']\n  },\n  posts: {\n    byId: {\n      '456': { id: '456', userId: '123', title: 'Hello World' }\n    },\n    allIds: ['456']\n  }\n};\n\n// Backend (PostgreSQL)\nCREATE TABLE users (\n    id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\nCREATE TABLE posts (\n    id UUID PRIMARY KEY,\n    user_id UUID,\n    title TEXT,\n    FOREIGN KEY (user_id) REFERENCES users(id)\n);\n```\n\n**Tables = State slices**  \n**Foreign keys = References between slices**  \n**Indexes = Performance optimization**\n\n---\n\n## Quick Reference\n\n### Connection Info\n- **Host:** `localhost`\n- **Port:** `5432`\n- **Database:** `postgres`\n- **Username:** Your macOS username\n- **Password:** (leave blank for local development)\n\n### Common Commands\n```bash\n# Start PostgreSQL\nbrew services start postgresql@16\n\n# Stop PostgreSQL\nbrew services stop postgresql@16\n\n# Connect to database\npsql -d postgres\n\n# Check version\npsql --version\n\n# Run SQL from command line\npsql -d postgres -c \"SELECT * FROM users;\"\n```\n\n### psql Commands (Inside psql shell)\n```sql\n\\l              -- List all databases\n\\c dbname       -- Connect to database\n\\dt             -- List all tables\n\\d tablename    -- Describe table structure\n\\du             -- List all users\n\\q              -- Quit psql\n```\n\n---\n\n## Best Practices\n\n1. **Always use UUIDs for primary keys** (unless you have a good reason not to)\n2. **Add indexes on foreign keys** (makes joins faster)\n3. **Use NOT NULL for required fields** (catch errors early)\n4. **Use UNIQUE for fields that should be unique** (like email, username)\n5. **Use CHECK constraints for validation** (enforce business rules at DB level)\n6. **Use TIMESTAMP for dates** (always include timezone info)\n7. **Use JSONB over JSON** (faster queries, better indexing)\n8. **Use CASCADE carefully** (can accidentally delete lots of data)\n9. **Test queries before running in production** (especially DELETE and UPDATE)\n10. **Back up your data regularly** (because shit happens)\n\n*Made with ❤️ for frontend devs learning backend stuff*","src/content/blog/postgres-cheatsheet.md","3a57d8c446eb4760",{"html":26,"metadata":27},"\u003Cblockquote>\n\u003Cp>A practical guide to PostgreSQL for developers who know React better than databases\u003C/p>\n\u003C/blockquote>\n\u003Ch2 id=\"table-of-contents\">Table of Contents\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"#data-types\">Data Types\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#create-table\">CREATE TABLE\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#primary-keys\">Primary Keys\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#foreign-keys\">Foreign Keys\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#constraints\">Constraints\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#crud-operations\">CRUD Operations\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#indexes\">Indexes\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#alter-table\">ALTER TABLE\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#drop-table\">DROP TABLE\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#uuid-functions\">UUID Functions\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Ch2 id=\"data-types\">Data Types\u003C/h2>\n\u003Cp>Think of these like TypeScript types:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sql\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Strings\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">VARCHAR\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">50\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)      \u003C/span>\u003Cspan style=\"color:#6A737D\">-- string with max length\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">TEXT\u003C/span>\u003Cspan style=\"color:#6A737D\">             -- string (unlimited)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Numbers\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">INTEGER\u003C/span>\u003Cspan style=\"color:#6A737D\">          -- number (whole numbers: -2147483648 to 2147483647)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">BIGINT\u003C/span>\u003Cspan style=\"color:#6A737D\">           -- number (bigger whole numbers)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">DECIMAL\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">10\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003Cspan style=\"color:#79B8FF\">2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)    \u003C/span>\u003Cspan style=\"color:#6A737D\">-- number (10 digits total, 2 after decimal)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">REAL\u003C/span>\u003Cspan style=\"color:#6A737D\">             -- number (floating point)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">SERIAL\u003C/span>\u003Cspan style=\"color:#6A737D\">           -- number (auto-incrementing integer)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Booleans\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">BOOLEAN\u003C/span>\u003Cspan style=\"color:#6A737D\">          -- boolean (true/false)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Dates\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">TIMESTAMP\u003C/span>\u003Cspan style=\"color:#6A737D\">        -- Date (with time)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">DATE\u003C/span>\u003Cspan style=\"color:#6A737D\">             -- Date (no time)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">TIME\u003C/span>\u003Cspan style=\"color:#6A737D\">             -- Time (no date)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- JSON\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">JSON\u003C/span>\u003Cspan style=\"color:#6A737D\">             -- any (stores JSON as text)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">JSONB            \u003C/span>\u003Cspan style=\"color:#6A737D\">-- any (stores JSON binary, faster queries)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- UUIDs\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">UUID             \u003C/span>\u003Cspan style=\"color:#6A737D\">-- string (validated UUID format)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Arrays\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">INTEGER\u003C/span>\u003Cspan style=\"color:#E1E4E8\">[]        \u003C/span>\u003Cspan style=\"color:#6A737D\">-- number[] (array of integers)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">TEXT\u003C/span>\u003Cspan style=\"color:#E1E4E8\">[]           \u003C/span>\u003Cspan style=\"color:#6A737D\">-- string[] (array of text)\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Chr>\n\u003Ch2 id=\"create-table\">CREATE TABLE\u003C/h2>\n\u003Ch3 id=\"basic-table\">Basic Table\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sql\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">CREATE\u003C/span>\u003Cspan style=\"color:#F97583\"> TABLE\u003C/span>\u003Cspan style=\"color:#B392F0\"> users\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    id UUID \u003C/span>\u003Cspan style=\"color:#F97583\">PRIMARY KEY\u003C/span>\u003Cspan style=\"color:#F97583\"> DEFAULT\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> gen_random_uuid(),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    username \u003C/span>\u003Cspan style=\"color:#F97583\">VARCHAR\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">50\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">UNIQUE\u003C/span>\u003Cspan style=\"color:#F97583\"> NOT NULL\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    email \u003C/span>\u003Cspan style=\"color:#F97583\">VARCHAR\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">100\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">UNIQUE\u003C/span>\u003Cspan style=\"color:#F97583\"> NOT NULL\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    age \u003C/span>\u003Cspan style=\"color:#F97583\">INTEGER\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    is_active \u003C/span>\u003Cspan style=\"color:#F97583\">BOOLEAN\u003C/span>\u003Cspan style=\"color:#F97583\"> DEFAULT\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> true,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    created_at \u003C/span>\u003Cspan style=\"color:#F97583\">TIMESTAMP\u003C/span>\u003Cspan style=\"color:#F97583\"> DEFAULT\u003C/span>\u003Cspan style=\"color:#F97583\"> NOW\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"table-with-foreign-key\">Table with Foreign Key\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sql\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">CREATE\u003C/span>\u003Cspan style=\"color:#F97583\"> TABLE\u003C/span>\u003Cspan style=\"color:#B392F0\"> posts\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    id UUID \u003C/span>\u003Cspan style=\"color:#F97583\">PRIMARY KEY\u003C/span>\u003Cspan style=\"color:#F97583\"> DEFAULT\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> gen_random_uuid(),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    user_id UUID \u003C/span>\u003Cspan style=\"color:#F97583\">NOT NULL\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    title \u003C/span>\u003Cspan style=\"color:#F97583\">TEXT\u003C/span>\u003Cspan style=\"color:#F97583\"> NOT NULL\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    content \u003C/span>\u003Cspan style=\"color:#F97583\">TEXT\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    created_at \u003C/span>\u003Cspan style=\"color:#F97583\">TIMESTAMP\u003C/span>\u003Cspan style=\"color:#F97583\"> DEFAULT\u003C/span>\u003Cspan style=\"color:#F97583\"> NOW\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    FOREIGN KEY\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (user_id) \u003C/span>\u003Cspan style=\"color:#F97583\">REFERENCES\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users(id)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"junction-table-many-to-many\">Junction Table (Many-to-Many)\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sql\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">CREATE\u003C/span>\u003Cspan style=\"color:#F97583\"> TABLE\u003C/span>\u003Cspan style=\"color:#B392F0\"> user_roles\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    user_id UUID,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    role_id UUID,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    assigned_at \u003C/span>\u003Cspan style=\"color:#F97583\">TIMESTAMP\u003C/span>\u003Cspan style=\"color:#F97583\"> DEFAULT\u003C/span>\u003Cspan style=\"color:#F97583\"> NOW\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    PRIMARY KEY\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (user_id, role_id),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    FOREIGN KEY\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (user_id) \u003C/span>\u003Cspan style=\"color:#F97583\">REFERENCES\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users(id),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    FOREIGN KEY\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (role_id) \u003C/span>\u003Cspan style=\"color:#F97583\">REFERENCES\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> roles(id)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Chr>\n\u003Ch2 id=\"primary-keys\">Primary Keys\u003C/h2>\n\u003Ch3 id=\"single-primary-key-most-common\">Single Primary Key (Most Common)\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sql\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">CREATE\u003C/span>\u003Cspan style=\"color:#F97583\"> TABLE\u003C/span>\u003Cspan style=\"color:#B392F0\"> users\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    id UUID \u003C/span>\u003Cspan style=\"color:#F97583\">PRIMARY KEY\u003C/span>\u003Cspan style=\"color:#F97583\"> DEFAULT\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> gen_random_uuid(),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    username \u003C/span>\u003Cspan style=\"color:#F97583\">VARCHAR\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">50\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"composite-primary-key-multiple-columns\">Composite Primary Key (Multiple Columns)\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sql\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">CREATE\u003C/span>\u003Cspan style=\"color:#F97583\"> TABLE\u003C/span>\u003Cspan style=\"color:#B392F0\"> user_roles\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    user_id UUID,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    role_id UUID,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    PRIMARY KEY\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (user_id, role_id)  \u003C/span>\u003Cspan style=\"color:#6A737D\">-- BOTH together must be unique\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>\u003Cstrong>Important:\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>❌ You CANNOT have multiple primary keys per table\u003C/li>\n\u003Cli>✅ You CAN have a primary key made of multiple columns (composite key)\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Ch2 id=\"foreign-keys\">Foreign Keys\u003C/h2>\n\u003Ch3 id=\"one-to-many-relationship\">One-to-Many Relationship\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sql\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- One user has many posts\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">CREATE\u003C/span>\u003Cspan style=\"color:#F97583\"> TABLE\u003C/span>\u003Cspan style=\"color:#B392F0\"> users\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    id UUID \u003C/span>\u003Cspan style=\"color:#F97583\">PRIMARY KEY\u003C/span>\u003Cspan style=\"color:#F97583\"> DEFAULT\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> gen_random_uuid(),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    username \u003C/span>\u003Cspan style=\"color:#F97583\">VARCHAR\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">50\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">CREATE\u003C/span>\u003Cspan style=\"color:#F97583\"> TABLE\u003C/span>\u003Cspan style=\"color:#B392F0\"> posts\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    id UUID \u003C/span>\u003Cspan style=\"color:#F97583\">PRIMARY KEY\u003C/span>\u003Cspan style=\"color:#F97583\"> DEFAULT\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> gen_random_uuid(),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    user_id UUID \u003C/span>\u003Cspan style=\"color:#F97583\">NOT NULL\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    title \u003C/span>\u003Cspan style=\"color:#F97583\">TEXT\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    FOREIGN KEY\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (user_id) \u003C/span>\u003Cspan style=\"color:#F97583\">REFERENCES\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users(id)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"many-to-many-relationship\">Many-to-Many Relationship\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sql\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Users have many roles, roles have many users\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">CREATE\u003C/span>\u003Cspan style=\"color:#F97583\"> TABLE\u003C/span>\u003Cspan style=\"color:#B392F0\"> users\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    id UUID \u003C/span>\u003Cspan style=\"color:#F97583\">PRIMARY KEY\u003C/span>\u003Cspan style=\"color:#F97583\"> DEFAULT\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> gen_random_uuid(),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    username \u003C/span>\u003Cspan style=\"color:#F97583\">VARCHAR\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">50\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">CREATE\u003C/span>\u003Cspan style=\"color:#F97583\"> TABLE\u003C/span>\u003Cspan style=\"color:#B392F0\"> roles\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    id UUID \u003C/span>\u003Cspan style=\"color:#F97583\">PRIMARY KEY\u003C/span>\u003Cspan style=\"color:#F97583\"> DEFAULT\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> gen_random_uuid(),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    name\u003C/span>\u003Cspan style=\"color:#F97583\"> VARCHAR\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">50\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Junction table\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">CREATE\u003C/span>\u003Cspan style=\"color:#F97583\"> TABLE\u003C/span>\u003Cspan style=\"color:#B392F0\"> user_roles\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    user_id UUID,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    role_id UUID,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    PRIMARY KEY\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (user_id, role_id),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    FOREIGN KEY\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (user_id) \u003C/span>\u003Cspan style=\"color:#F97583\">REFERENCES\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users(id),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    FOREIGN KEY\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (role_id) \u003C/span>\u003Cspan style=\"color:#F97583\">REFERENCES\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> roles(id)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"foreign-key-with-cascade\">Foreign Key with Cascade\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sql\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">CREATE\u003C/span>\u003Cspan style=\"color:#F97583\"> TABLE\u003C/span>\u003Cspan style=\"color:#B392F0\"> posts\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    id UUID \u003C/span>\u003Cspan style=\"color:#F97583\">PRIMARY KEY\u003C/span>\u003Cspan style=\"color:#F97583\"> DEFAULT\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> gen_random_uuid(),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    user_id UUID \u003C/span>\u003Cspan style=\"color:#F97583\">NOT NULL\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    title \u003C/span>\u003Cspan style=\"color:#F97583\">TEXT\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    -- Delete posts when user is deleted\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    FOREIGN KEY\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (user_id) \u003C/span>\u003Cspan style=\"color:#F97583\">REFERENCES\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users(id) \u003C/span>\u003Cspan style=\"color:#F97583\">ON DELETE CASCADE\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Chr>\n\u003Ch2 id=\"constraints\">Constraints\u003C/h2>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sql\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">CREATE\u003C/span>\u003Cspan style=\"color:#F97583\"> TABLE\u003C/span>\u003Cspan style=\"color:#B392F0\"> users\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    id UUID \u003C/span>\u003Cspan style=\"color:#F97583\">PRIMARY KEY\u003C/span>\u003Cspan style=\"color:#F97583\"> DEFAULT\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> gen_random_uuid(),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    -- NOT NULL: Must have a value\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    username \u003C/span>\u003Cspan style=\"color:#F97583\">VARCHAR\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">50\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">NOT NULL\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    -- UNIQUE: No duplicates allowed\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    email \u003C/span>\u003Cspan style=\"color:#F97583\">VARCHAR\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">100\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">UNIQUE\u003C/span>\u003Cspan style=\"color:#F97583\"> NOT NULL\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    -- CHECK: Custom validation\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    age \u003C/span>\u003Cspan style=\"color:#F97583\">INTEGER\u003C/span>\u003Cspan style=\"color:#F97583\"> CHECK\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (age \u003C/span>\u003Cspan style=\"color:#F97583\">>=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 18\u003C/span>\u003Cspan style=\"color:#E1E4E8\">),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    price \u003C/span>\u003Cspan style=\"color:#F97583\">DECIMAL\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">10\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003Cspan style=\"color:#79B8FF\">2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">CHECK\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (price \u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    -- DEFAULT: Auto-fill if not provided\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    created_at \u003C/span>\u003Cspan style=\"color:#F97583\">TIMESTAMP\u003C/span>\u003Cspan style=\"color:#F97583\"> DEFAULT\u003C/span>\u003Cspan style=\"color:#F97583\"> NOW\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    is_active \u003C/span>\u003Cspan style=\"color:#F97583\">BOOLEAN\u003C/span>\u003Cspan style=\"color:#F97583\"> DEFAULT\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> true,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    status\u003C/span>\u003Cspan style=\"color:#F97583\"> VARCHAR\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">20\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">DEFAULT\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'pending'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Chr>\n\u003Ch2 id=\"crud-operations\">CRUD Operations\u003C/h2>\n\u003Ch3 id=\"create-insert\">CREATE (INSERT)\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sql\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Single insert\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">INSERT INTO\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users (username, email) \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">VALUES\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'ryan'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'ryan@example.com'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Multiple inserts\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">INSERT INTO\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users (username, email) \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">VALUES\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    (\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'alice'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'alice@example.com'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    (\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'bob'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'bob@example.com'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    (\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'charlie'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'charlie@example.com'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Insert and return the created row\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">INSERT INTO\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users (username, email) \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">VALUES\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'dave'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'dave@example.com'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">RETURNING \u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Insert and return specific columns\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">INSERT INTO\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users (username, email) \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">VALUES\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'eve'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'eve@example.com'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">RETURNING id, username;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"read-select\">READ (SELECT)\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sql\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Get all rows\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">SELECT\u003C/span>\u003Cspan style=\"color:#F97583\"> *\u003C/span>\u003Cspan style=\"color:#F97583\"> FROM\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Get specific columns\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">SELECT\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> username, email \u003C/span>\u003Cspan style=\"color:#F97583\">FROM\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Filter with WHERE\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">SELECT\u003C/span>\u003Cspan style=\"color:#F97583\"> *\u003C/span>\u003Cspan style=\"color:#F97583\"> FROM\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003Cspan style=\"color:#F97583\">WHERE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> username \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'ryan'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">SELECT\u003C/span>\u003Cspan style=\"color:#F97583\"> *\u003C/span>\u003Cspan style=\"color:#F97583\"> FROM\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003Cspan style=\"color:#F97583\">WHERE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> age \u003C/span>\u003Cspan style=\"color:#F97583\">>=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 18\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">SELECT\u003C/span>\u003Cspan style=\"color:#F97583\"> *\u003C/span>\u003Cspan style=\"color:#F97583\"> FROM\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003Cspan style=\"color:#F97583\">WHERE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> is_active \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> true;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Multiple conditions (AND)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">SELECT\u003C/span>\u003Cspan style=\"color:#F97583\"> *\u003C/span>\u003Cspan style=\"color:#F97583\"> FROM\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">WHERE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> age \u003C/span>\u003Cspan style=\"color:#F97583\">>=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 18\u003C/span>\u003Cspan style=\"color:#F97583\"> AND\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> is_active \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> true;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Multiple conditions (OR)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">SELECT\u003C/span>\u003Cspan style=\"color:#F97583\"> *\u003C/span>\u003Cspan style=\"color:#F97583\"> FROM\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">WHERE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> username \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'ryan'\u003C/span>\u003Cspan style=\"color:#F97583\"> OR\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> username \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'alice'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- IN clause (like array.includes())\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">SELECT\u003C/span>\u003Cspan style=\"color:#F97583\"> *\u003C/span>\u003Cspan style=\"color:#F97583\"> FROM\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">WHERE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> username \u003C/span>\u003Cspan style=\"color:#F97583\">IN\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'ryan'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'alice'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'bob'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Pattern matching (LIKE)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">SELECT\u003C/span>\u003Cspan style=\"color:#F97583\"> *\u003C/span>\u003Cspan style=\"color:#F97583\"> FROM\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003Cspan style=\"color:#F97583\">WHERE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> email \u003C/span>\u003Cspan style=\"color:#F97583\">LIKE\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> '%@gmail.com'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">SELECT\u003C/span>\u003Cspan style=\"color:#F97583\"> *\u003C/span>\u003Cspan style=\"color:#F97583\"> FROM\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003Cspan style=\"color:#F97583\">WHERE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> username \u003C/span>\u003Cspan style=\"color:#F97583\">LIKE\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'r%'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;  \u003C/span>\u003Cspan style=\"color:#6A737D\">-- Starts with 'r'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">SELECT\u003C/span>\u003Cspan style=\"color:#F97583\"> *\u003C/span>\u003Cspan style=\"color:#F97583\"> FROM\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003Cspan style=\"color:#F97583\">WHERE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> username \u003C/span>\u003Cspan style=\"color:#F97583\">LIKE\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> '%an%'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; \u003C/span>\u003Cspan style=\"color:#6A737D\">-- Contains 'an'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- NOT\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">SELECT\u003C/span>\u003Cspan style=\"color:#F97583\"> *\u003C/span>\u003Cspan style=\"color:#F97583\"> FROM\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003Cspan style=\"color:#F97583\">WHERE\u003C/span>\u003Cspan style=\"color:#F97583\"> NOT\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> is_active;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">SELECT\u003C/span>\u003Cspan style=\"color:#F97583\"> *\u003C/span>\u003Cspan style=\"color:#F97583\"> FROM\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003Cspan style=\"color:#F97583\">WHERE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> email \u003C/span>\u003Cspan style=\"color:#F97583\">NOT\u003C/span>\u003Cspan style=\"color:#F97583\"> LIKE\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> '%@gmail.com'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- NULL checks\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">SELECT\u003C/span>\u003Cspan style=\"color:#F97583\"> *\u003C/span>\u003Cspan style=\"color:#F97583\"> FROM\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003Cspan style=\"color:#F97583\">WHERE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> phone \u003C/span>\u003Cspan style=\"color:#F97583\">IS\u003C/span>\u003Cspan style=\"color:#F97583\"> NULL\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">SELECT\u003C/span>\u003Cspan style=\"color:#F97583\"> *\u003C/span>\u003Cspan style=\"color:#F97583\"> FROM\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003Cspan style=\"color:#F97583\">WHERE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> phone \u003C/span>\u003Cspan style=\"color:#F97583\">IS NOT NULL\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Order by\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">SELECT\u003C/span>\u003Cspan style=\"color:#F97583\"> *\u003C/span>\u003Cspan style=\"color:#F97583\"> FROM\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003Cspan style=\"color:#F97583\">ORDER BY\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> created_at \u003C/span>\u003Cspan style=\"color:#F97583\">DESC\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">SELECT\u003C/span>\u003Cspan style=\"color:#F97583\"> *\u003C/span>\u003Cspan style=\"color:#F97583\"> FROM\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003Cspan style=\"color:#F97583\">ORDER BY\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> username \u003C/span>\u003Cspan style=\"color:#F97583\">ASC\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">SELECT\u003C/span>\u003Cspan style=\"color:#F97583\"> *\u003C/span>\u003Cspan style=\"color:#F97583\"> FROM\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003Cspan style=\"color:#F97583\">ORDER BY\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> age \u003C/span>\u003Cspan style=\"color:#F97583\">DESC\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, username \u003C/span>\u003Cspan style=\"color:#F97583\">ASC\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Limit and offset (pagination)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">SELECT\u003C/span>\u003Cspan style=\"color:#F97583\"> *\u003C/span>\u003Cspan style=\"color:#F97583\"> FROM\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003Cspan style=\"color:#F97583\">LIMIT\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 10\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">SELECT\u003C/span>\u003Cspan style=\"color:#F97583\"> *\u003C/span>\u003Cspan style=\"color:#F97583\"> FROM\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003Cspan style=\"color:#F97583\">LIMIT\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 10\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> OFFSET \u003C/span>\u003Cspan style=\"color:#79B8FF\">20\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;  \u003C/span>\u003Cspan style=\"color:#6A737D\">-- Skip 20, get next 10\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Count\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">SELECT\u003C/span>\u003Cspan style=\"color:#79B8FF\"> COUNT\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">FROM\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">SELECT\u003C/span>\u003Cspan style=\"color:#79B8FF\"> COUNT\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">FROM\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003Cspan style=\"color:#F97583\">WHERE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> is_active \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> true;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Distinct\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">SELECT DISTINCT\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> email \u003C/span>\u003Cspan style=\"color:#F97583\">FROM\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"update\">UPDATE\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sql\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Update one field\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">UPDATE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">SET\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> email \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'newemail@example.com'\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">WHERE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> username \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'ryan'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Update multiple fields\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">UPDATE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">SET\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> email \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'new@example.com'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, is_active \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> false \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">WHERE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> id \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'some-uuid-here'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Update with calculation\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">UPDATE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">SET\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> age \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> age \u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">WHERE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> username \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'ryan'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Update all rows (BE CAREFUL!)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">UPDATE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003Cspan style=\"color:#F97583\">SET\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> is_active \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> true;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Update and return modified rows\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">UPDATE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">SET\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> email \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'new@example.com'\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">WHERE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> username \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'ryan'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">RETURNING \u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"delete\">DELETE\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sql\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Delete specific row\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">DELETE\u003C/span>\u003Cspan style=\"color:#F97583\"> FROM\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003Cspan style=\"color:#F97583\">WHERE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> username \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'ryan'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Delete with condition\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">DELETE\u003C/span>\u003Cspan style=\"color:#F97583\"> FROM\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003Cspan style=\"color:#F97583\">WHERE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> created_at \u003C/span>\u003Cspan style=\"color:#F97583\">&#x3C;\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> '2020-01-01'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">DELETE\u003C/span>\u003Cspan style=\"color:#F97583\"> FROM\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003Cspan style=\"color:#F97583\">WHERE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> is_active \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> false;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Delete all rows (BE VERY CAREFUL!)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">DELETE\u003C/span>\u003Cspan style=\"color:#F97583\"> FROM\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Delete and return what was deleted\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">DELETE\u003C/span>\u003Cspan style=\"color:#F97583\"> FROM\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">WHERE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> username \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'ryan'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">RETURNING \u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Chr>\n\u003Ch2 id=\"indexes\">Indexes\u003C/h2>\n\u003Cp>Indexes make queries faster (like database performance optimization):\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sql\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Create index on frequently queried column\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">CREATE\u003C/span>\u003Cspan style=\"color:#F97583\"> INDEX\u003C/span>\u003Cspan style=\"color:#B392F0\"> idx_users_email\u003C/span>\u003Cspan style=\"color:#F97583\"> ON\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users(email);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Unique index (enforces uniqueness like UNIQUE constraint)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">CREATE\u003C/span>\u003Cspan style=\"color:#F97583\"> UNIQUE INDEX\u003C/span>\u003Cspan style=\"color:#B392F0\"> idx_users_username\u003C/span>\u003Cspan style=\"color:#F97583\"> ON\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users(username);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Composite index (multiple columns)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">CREATE\u003C/span>\u003Cspan style=\"color:#F97583\"> INDEX\u003C/span>\u003Cspan style=\"color:#B392F0\"> idx_posts_user_created\u003C/span>\u003Cspan style=\"color:#F97583\"> ON\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> posts(user_id, created_at);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Drop index\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">DROP\u003C/span>\u003Cspan style=\"color:#F97583\"> INDEX\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> idx_users_email;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Check if index exists\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">DROP\u003C/span>\u003Cspan style=\"color:#F97583\"> INDEX\u003C/span>\u003Cspan style=\"color:#F97583\"> IF\u003C/span>\u003Cspan style=\"color:#F97583\"> EXISTS\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> idx_users_email;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>\u003Cstrong>When to use indexes:\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>✅ Columns used in WHERE clauses frequently\u003C/li>\n\u003Cli>✅ Foreign key columns\u003C/li>\n\u003Cli>✅ Columns used in ORDER BY\u003C/li>\n\u003Cli>✅ Columns used in JOIN conditions\u003C/li>\n\u003Cli>❌ Small tables (overhead not worth it)\u003C/li>\n\u003Cli>❌ Columns that change frequently (slows down writes)\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Ch2 id=\"alter-table\">ALTER TABLE\u003C/h2>\n\u003Cp>Modifying existing tables:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sql\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Add column\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">ALTER\u003C/span>\u003Cspan style=\"color:#F97583\"> TABLE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003Cspan style=\"color:#F97583\">ADD\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> COLUMN phone \u003C/span>\u003Cspan style=\"color:#F97583\">VARCHAR\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">20\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">ALTER\u003C/span>\u003Cspan style=\"color:#F97583\"> TABLE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003Cspan style=\"color:#F97583\">ADD\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> COLUMN bio \u003C/span>\u003Cspan style=\"color:#F97583\">TEXT\u003C/span>\u003Cspan style=\"color:#F97583\"> DEFAULT\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> ''\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Drop column\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">ALTER\u003C/span>\u003Cspan style=\"color:#F97583\"> TABLE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003Cspan style=\"color:#F97583\">DROP\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> COLUMN phone;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Rename column\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">ALTER\u003C/span>\u003Cspan style=\"color:#F97583\"> TABLE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users RENAME COLUMN username \u003C/span>\u003Cspan style=\"color:#F97583\">TO\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> user_name;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Rename table\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">ALTER\u003C/span>\u003Cspan style=\"color:#F97583\"> TABLE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users RENAME \u003C/span>\u003Cspan style=\"color:#F97583\">TO\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> app_users;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Change column type\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">ALTER\u003C/span>\u003Cspan style=\"color:#F97583\"> TABLE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003Cspan style=\"color:#F97583\">ALTER\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> COLUMN age \u003C/span>\u003Cspan style=\"color:#F97583\">TYPE\u003C/span>\u003Cspan style=\"color:#F97583\"> BIGINT\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Set default value\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">ALTER\u003C/span>\u003Cspan style=\"color:#F97583\"> TABLE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003Cspan style=\"color:#F97583\">ALTER\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> COLUMN is_active \u003C/span>\u003Cspan style=\"color:#F97583\">SET\u003C/span>\u003Cspan style=\"color:#F97583\"> DEFAULT\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> true;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Remove default value\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">ALTER\u003C/span>\u003Cspan style=\"color:#F97583\"> TABLE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003Cspan style=\"color:#F97583\">ALTER\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> COLUMN is_active \u003C/span>\u003Cspan style=\"color:#F97583\">DROP\u003C/span>\u003Cspan style=\"color:#F97583\"> DEFAULT\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Add NOT NULL constraint\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">ALTER\u003C/span>\u003Cspan style=\"color:#F97583\"> TABLE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003Cspan style=\"color:#F97583\">ALTER\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> COLUMN email \u003C/span>\u003Cspan style=\"color:#F97583\">SET\u003C/span>\u003Cspan style=\"color:#F97583\"> NOT NULL\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Remove NOT NULL constraint\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">ALTER\u003C/span>\u003Cspan style=\"color:#F97583\"> TABLE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003Cspan style=\"color:#F97583\">ALTER\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> COLUMN email \u003C/span>\u003Cspan style=\"color:#F97583\">DROP\u003C/span>\u003Cspan style=\"color:#F97583\"> NOT NULL\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Add constraint\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">ALTER\u003C/span>\u003Cspan style=\"color:#F97583\"> TABLE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003Cspan style=\"color:#F97583\">ADD\u003C/span>\u003Cspan style=\"color:#F97583\"> CONSTRAINT\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> check_age \u003C/span>\u003Cspan style=\"color:#F97583\">CHECK\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (age \u003C/span>\u003Cspan style=\"color:#F97583\">>=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 18\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">ALTER\u003C/span>\u003Cspan style=\"color:#F97583\"> TABLE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003Cspan style=\"color:#F97583\">ADD\u003C/span>\u003Cspan style=\"color:#F97583\"> CONSTRAINT\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> unique_email \u003C/span>\u003Cspan style=\"color:#F97583\">UNIQUE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (email);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Drop constraint\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">ALTER\u003C/span>\u003Cspan style=\"color:#F97583\"> TABLE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003Cspan style=\"color:#F97583\">DROP\u003C/span>\u003Cspan style=\"color:#F97583\"> CONSTRAINT\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> check_age;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Chr>\n\u003Ch2 id=\"drop-table\">DROP TABLE\u003C/h2>\n\u003Cp>Deleting tables:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sql\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Delete table and all data\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">DROP\u003C/span>\u003Cspan style=\"color:#F97583\"> TABLE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Delete if exists (no error if doesn't exist)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">DROP\u003C/span>\u003Cspan style=\"color:#F97583\"> TABLE\u003C/span>\u003Cspan style=\"color:#F97583\"> IF\u003C/span>\u003Cspan style=\"color:#F97583\"> EXISTS\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Delete with cascade (also delete dependent tables/constraints)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">DROP\u003C/span>\u003Cspan style=\"color:#F97583\"> TABLE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users CASCADE;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Chr>\n\u003Ch2 id=\"uuid-functions\">UUID Functions\u003C/h2>\n\u003Ch3 id=\"modern-way-postgresql-13\">Modern Way (PostgreSQL 13+)\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sql\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Generate random UUID (v4)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">SELECT\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> gen_random_uuid();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Output: 550e8400-e29b-41d4-a716-446655440000\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Use in table\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">CREATE\u003C/span>\u003Cspan style=\"color:#F97583\"> TABLE\u003C/span>\u003Cspan style=\"color:#B392F0\"> users\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    id UUID \u003C/span>\u003Cspan style=\"color:#F97583\">PRIMARY KEY\u003C/span>\u003Cspan style=\"color:#F97583\"> DEFAULT\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> gen_random_uuid(),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    username \u003C/span>\u003Cspan style=\"color:#F97583\">VARCHAR\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">50\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"legacy-way-requires-extension\">Legacy Way (Requires Extension)\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sql\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Enable extension (only needed once per database)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">CREATE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> EXTENSION \u003C/span>\u003Cspan style=\"color:#F97583\">IF\u003C/span>\u003Cspan style=\"color:#F97583\"> NOT\u003C/span>\u003Cspan style=\"color:#F97583\"> EXISTS\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"uuid-ossp\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Generate UUIDs\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">SELECT\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> uuid_generate_v1();  \u003C/span>\u003Cspan style=\"color:#6A737D\">-- Time-based (contains MAC address)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">SELECT\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> uuid_generate_v4();  \u003C/span>\u003Cspan style=\"color:#6A737D\">-- Random (same as gen_random_uuid)\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"uuid-versions-explained\">UUID Versions Explained\u003C/h3>\n\u003Cp>\u003Cstrong>v1 (Time-based):\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>Contains timestamp + MAC address\u003C/li>\n\u003Cli>✅ Sortable by time\u003C/li>\n\u003Cli>❌ Privacy leak (MAC address visible)\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cstrong>v4 (Random):\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>Pure random\u003C/li>\n\u003Cli>✅ Secure and unpredictable\u003C/li>\n\u003Cli>✅ No privacy leaks\u003C/li>\n\u003Cli>❌ Not sortable\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cstrong>Recommendation:\u003C/strong> Use \u003Ccode>gen_random_uuid()\u003C/code> (v4) for modern apps!\u003C/p>\n\u003Chr>\n\u003Ch2 id=\"frontend-dev-mental-model\">Frontend Dev Mental Model\u003C/h2>\n\u003Cp>Think of databases like normalized Redux state:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Frontend (Redux)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> state\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  users: {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    byId: {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">      '123'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: { id: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'123'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, username: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'ryan'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, email: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'ryan@example.com'\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    allIds: [\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'123'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  posts: {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    byId: {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">      '456'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: { id: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'456'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, userId: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'123'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, title: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Hello World'\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    allIds: [\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'456'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">};\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Backend (PostgreSQL)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">CREATE\u003C/span>\u003Cspan style=\"color:#79B8FF\"> TABLE\u003C/span>\u003Cspan style=\"color:#B392F0\"> users\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    id \u003C/span>\u003Cspan style=\"color:#79B8FF\">UUID\u003C/span>\u003Cspan style=\"color:#79B8FF\"> PRIMARY\u003C/span>\u003Cspan style=\"color:#79B8FF\"> KEY\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    username \u003C/span>\u003Cspan style=\"color:#B392F0\">VARCHAR\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">50\u003C/span>\u003Cspan style=\"color:#E1E4E8\">),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    email \u003C/span>\u003Cspan style=\"color:#B392F0\">VARCHAR\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">100\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">CREATE\u003C/span>\u003Cspan style=\"color:#79B8FF\"> TABLE\u003C/span>\u003Cspan style=\"color:#B392F0\"> posts\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    id \u003C/span>\u003Cspan style=\"color:#79B8FF\">UUID\u003C/span>\u003Cspan style=\"color:#79B8FF\"> PRIMARY\u003C/span>\u003Cspan style=\"color:#79B8FF\"> KEY\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    user_id \u003C/span>\u003Cspan style=\"color:#79B8FF\">UUID\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    title \u003C/span>\u003Cspan style=\"color:#79B8FF\">TEXT\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    FOREIGN\u003C/span>\u003Cspan style=\"color:#B392F0\"> KEY\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (user_id) \u003C/span>\u003Cspan style=\"color:#79B8FF\">REFERENCES\u003C/span>\u003Cspan style=\"color:#B392F0\"> users\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(id)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>\u003Cstrong>Tables = State slices\u003C/strong>\u003Cbr>\n\u003Cstrong>Foreign keys = References between slices\u003C/strong>\u003Cbr>\n\u003Cstrong>Indexes = Performance optimization\u003C/strong>\u003C/p>\n\u003Chr>\n\u003Ch2 id=\"quick-reference\">Quick Reference\u003C/h2>\n\u003Ch3 id=\"connection-info\">Connection Info\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Cstrong>Host:\u003C/strong> \u003Ccode>localhost\u003C/code>\u003C/li>\n\u003Cli>\u003Cstrong>Port:\u003C/strong> \u003Ccode>5432\u003C/code>\u003C/li>\n\u003Cli>\u003Cstrong>Database:\u003C/strong> \u003Ccode>postgres\u003C/code>\u003C/li>\n\u003Cli>\u003Cstrong>Username:\u003C/strong> Your macOS username\u003C/li>\n\u003Cli>\u003Cstrong>Password:\u003C/strong> (leave blank for local development)\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"common-commands\">Common Commands\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"># Start PostgreSQL\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">brew\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> services\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> start\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> postgresql@16\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"># Stop PostgreSQL\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">brew\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> services\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> stop\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> postgresql@16\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"># Connect to database\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">psql\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -d\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> postgres\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"># Check version\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">psql\u003C/span>\u003Cspan style=\"color:#79B8FF\"> --version\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"># Run SQL from command line\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">psql\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -d\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> postgres\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -c\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"SELECT * FROM users;\"\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"psql-commands-inside-psql-shell\">psql Commands (Inside psql shell)\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sql\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">\\l              \u003C/span>\u003Cspan style=\"color:#6A737D\">-- List all databases\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">\\c dbname       \u003C/span>\u003Cspan style=\"color:#6A737D\">-- Connect to database\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">\\dt             \u003C/span>\u003Cspan style=\"color:#6A737D\">-- List all tables\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">\\d tablename    \u003C/span>\u003Cspan style=\"color:#6A737D\">-- Describe table structure\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">\\du             \u003C/span>\u003Cspan style=\"color:#6A737D\">-- List all users\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">\\q              \u003C/span>\u003Cspan style=\"color:#6A737D\">-- Quit psql\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Chr>\n\u003Ch2 id=\"best-practices\">Best Practices\u003C/h2>\n\u003Col>\n\u003Cli>\u003Cstrong>Always use UUIDs for primary keys\u003C/strong> (unless you have a good reason not to)\u003C/li>\n\u003Cli>\u003Cstrong>Add indexes on foreign keys\u003C/strong> (makes joins faster)\u003C/li>\n\u003Cli>\u003Cstrong>Use NOT NULL for required fields\u003C/strong> (catch errors early)\u003C/li>\n\u003Cli>\u003Cstrong>Use UNIQUE for fields that should be unique\u003C/strong> (like email, username)\u003C/li>\n\u003Cli>\u003Cstrong>Use CHECK constraints for validation\u003C/strong> (enforce business rules at DB level)\u003C/li>\n\u003Cli>\u003Cstrong>Use TIMESTAMP for dates\u003C/strong> (always include timezone info)\u003C/li>\n\u003Cli>\u003Cstrong>Use JSONB over JSON\u003C/strong> (faster queries, better indexing)\u003C/li>\n\u003Cli>\u003Cstrong>Use CASCADE carefully\u003C/strong> (can accidentally delete lots of data)\u003C/li>\n\u003Cli>\u003Cstrong>Test queries before running in production\u003C/strong> (especially DELETE and UPDATE)\u003C/li>\n\u003Cli>\u003Cstrong>Back up your data regularly\u003C/strong> (because shit happens)\u003C/li>\n\u003C/ol>\n\u003Cp>\u003Cem>Made with ❤️ for frontend devs learning backend stuff\u003C/em>\u003C/p>",{"headings":28,"localImagePaths":127,"remoteImagePaths":128,"frontmatter":129,"imagePaths":132},[29,33,36,39,43,46,49,52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124],{"depth":30,"slug":31,"text":32},2,"table-of-contents","Table of Contents",{"depth":30,"slug":34,"text":35},"data-types","Data Types",{"depth":30,"slug":37,"text":38},"create-table","CREATE TABLE",{"depth":40,"slug":41,"text":42},3,"basic-table","Basic Table",{"depth":40,"slug":44,"text":45},"table-with-foreign-key","Table with Foreign Key",{"depth":40,"slug":47,"text":48},"junction-table-many-to-many","Junction Table (Many-to-Many)",{"depth":30,"slug":50,"text":51},"primary-keys","Primary Keys",{"depth":40,"slug":53,"text":54},"single-primary-key-most-common","Single Primary Key (Most Common)",{"depth":40,"slug":56,"text":57},"composite-primary-key-multiple-columns","Composite Primary Key (Multiple Columns)",{"depth":30,"slug":59,"text":60},"foreign-keys","Foreign Keys",{"depth":40,"slug":62,"text":63},"one-to-many-relationship","One-to-Many Relationship",{"depth":40,"slug":65,"text":66},"many-to-many-relationship","Many-to-Many Relationship",{"depth":40,"slug":68,"text":69},"foreign-key-with-cascade","Foreign Key with Cascade",{"depth":30,"slug":71,"text":72},"constraints","Constraints",{"depth":30,"slug":74,"text":75},"crud-operations","CRUD Operations",{"depth":40,"slug":77,"text":78},"create-insert","CREATE (INSERT)",{"depth":40,"slug":80,"text":81},"read-select","READ (SELECT)",{"depth":40,"slug":83,"text":84},"update","UPDATE",{"depth":40,"slug":86,"text":87},"delete","DELETE",{"depth":30,"slug":89,"text":90},"indexes","Indexes",{"depth":30,"slug":92,"text":93},"alter-table","ALTER TABLE",{"depth":30,"slug":95,"text":96},"drop-table","DROP TABLE",{"depth":30,"slug":98,"text":99},"uuid-functions","UUID Functions",{"depth":40,"slug":101,"text":102},"modern-way-postgresql-13","Modern Way (PostgreSQL 13+)",{"depth":40,"slug":104,"text":105},"legacy-way-requires-extension","Legacy Way (Requires Extension)",{"depth":40,"slug":107,"text":108},"uuid-versions-explained","UUID Versions Explained",{"depth":30,"slug":110,"text":111},"frontend-dev-mental-model","Frontend Dev Mental Model",{"depth":30,"slug":113,"text":114},"quick-reference","Quick Reference",{"depth":40,"slug":116,"text":117},"connection-info","Connection Info",{"depth":40,"slug":119,"text":120},"common-commands","Common Commands",{"depth":40,"slug":122,"text":123},"psql-commands-inside-psql-shell","psql Commands (Inside psql shell)",{"depth":30,"slug":125,"text":126},"best-practices","Best Practices",[],[],{"title":14,"description":15,"pubDate":130,"tags":131},["Date","2025-10-27T00:00:00.000Z"],[18,19,20,21],[],"postgres-cheatsheet.md","building-a-zero-cost-blog",{"id":134,"data":136,"body":144,"filePath":145,"digest":146,"rendered":147,"legacyId":229},{"title":137,"description":138,"pubDate":139,"tags":140},"Building a $0/Month Blog That I Actually Own","How I finally put my domain to work using Cloudflare's free tier, Astro, and way too many party parrots",["Date","2025-10-28T00:00:00.000Z"],[141,142,143,21],"webdev","astro","cloudflare","## The Domain That Did Nothing\n\nI've owned `ryanhaines.com` for years. And what did I do with it? Absolutely nothing productive. It just redirected to my LinkedIn profile like some kind of digital business card that cost me $12/year to maintain.\n\nWhy? Because I'm **frugal**. I wasn't about to drop $5-20/month on hosting when all I wanted was a simple blog to share technical posts. That's $60-240/year to host some markdown files and a contact form.\n\nBut then Cloudflare happened. Free tier. D1 database. Pages hosting. All free. Not \"free trial\" or \"free credits for 3 months\" - actually free. So naturally, I had to build something.\n\n## The Requirements\n\nI had a few non-negotiables:\n\n1. **Write in Markdown** - I'm a developer, not a WordPress admin\n2. **Comments and likes** - Static sites are cool, but I wanted interaction\n3. **Full ownership** - If Cloudflare [enshittifies](https://en.wikipedia.org/wiki/Enshittification), I can export and leave\n4. **Zero cost** - The whole point, really\n5. **No vendor lock-in** - SQLite dumps are portable. Vendor-specific APIs are not.\n\n## Why Not Use [Insert Popular Service Here]?\n\nYou're probably thinking: \"Why not just use Disqus? Or Giscus? Or Utterances?\"\n\nGreat question! Here's why I said no:\n\n- **Disqus** - Ads, tracking, owned by a ad-tech company. Hard pass.\n- **Giscus/Utterances** - Requires readers to have GitHub accounts. My mom doesn't have a GitHub account.\n- **Commento/Hyvor** - Costs money after free tier. See \"frugal\" above.\n- **Facebook Comments** - lol no\n\nI wanted something simple: name + comment. No login, no tracking, no third-party dependencies that could vanish overnight. A form, a database, and spam protection - that's all it takes.\n\n## The Stack\n\nAfter some research (and by research, I mean asking Claude what would work), I landed on:\n\n- **[Astro](https://astro.build/)** - Fast, markdown-friendly, modern\n- **[Cloudflare Pages](https://pages.cloudflare.com/)** - Free hosting with global CDN\n- **[Cloudflare D1](https://developers.cloudflare.com/d1/)** - Free SQLite database (5M reads/day on free tier!)\n- **[Turnstile](https://www.cloudflare.com/products/turnstile/)** - Free CAPTCHA that doesn't make users play \"find the crosswalk\"\n- **[Tailwind CSS](https://tailwindcss.com/)** - Because hand-writing CSS in 2025 is for masochists\n\nEverything here is either standard web tech (Astro, Tailwind) or built on SQLite (D1), which means the data is portable and the code isn't locked to any single platform.\n\n## Building It (The Fun Parts)\n\n### 1. Theme Setup\n\nFirst things first: I'm not a designer. So I found the beautiful [Dante Astro Theme](https://github.com/JustGoodUI/dante-astro-theme) and made it my own.\n\n**Important lesson:** If you add dark mode, handle the flash of unstyled content! Nothing says \"amateur hour\" like your site flickering between light and dark on every page load. Astro makes this easy with inline theme scripts that run before the page renders.\n\n```astro\n\u003Cscript is:inline>\n  // This runs BEFORE page renders\n  const theme = localStorage.getItem('theme') || 'light';\n  document.documentElement.classList.add(theme);\n\u003C/script>\n```\n\n### 2. The Commenting System\n\nThis was the meaty part. I built a custom system with:\n\n- **Sidebar panel** - Comments slide in from the right (Medium-style)\n- **No email collection** - I'm not a marketing agency\n- **Rate limiting** - 2 comments per 5 minutes per IP\n- **Turnstile CAPTCHA** - Stops the bots\n- **Spam detection** - Pattern matching for common spam phrases\n\nThe database schema is dead simple:\n\n```sql\nCREATE TABLE comments (\n  id INTEGER PRIMARY KEY,\n  post_slug TEXT NOT NULL,\n  author_name TEXT NOT NULL,\n  content TEXT NOT NULL,\n  created_at INTEGER NOT NULL,\n  ip_address TEXT,\n  approved INTEGER DEFAULT 1\n);\n```\n\nStandard SQLite with no foreign keys to proprietary systems.\n\n### 3. Admin Panel\n\nBecause trolls exist, I built a moderation panel at `/admin/moderate`. It's protected by an admin key (randomly generated, stored in environment variables) and lets me:\n\n- View all comments\n- Approve/reject/delete\n- See spam patterns\n- Check rate limit stats\n\nIt's basic but functional. And since it's just SQL queries, I can also moderate via command line if needed:\n\n```bash\nwrangler d1 execute blog-db --remote \\\n  --command \"DELETE FROM comments WHERE id = 666\"\n```\n\n### 4. Party Parrots \u003Cimg src=\"/parrot.gif\" alt=\"parrot\" style=\"display: inline; height: 30px; width: auto; vertical-align: middle;\" />\n\nHere's where I added personality. I'm a card-carrying member of the [Cult of the Party Parrot](https://cultofthepartyparrot.com/), so naturally, when you like a post on my blog, you get rewarded with party parrots.\n\nYou can \"like\" up to 50 times per post (like Medium). Trust me, you'll know when you've reached the limit.\n\nThis kind of whimsy is what makes personal blogs fun. Big platforms would A/B test this to death. I just added it because it makes me smile.\n\n### 5. Emergency Controls\n\nPlanning for the worst is good practice. I added:\n\n- **Extreme rate limiting** - Can dial it down to 1 comment per hour if needed\n- **Manual approval mode** - One line change to require all comments be approved\n- **Spam patterns** - Auto-detect and silently reject obvious spam\n- **Kill switch** - Can disable comments entirely in 30 seconds\n\nHopefully I never need these. But it's nice to know they're there.\n\n## The WTF Moments of Learning Cloudflare\n\nI weep for the people who were forced to learn this platform from reading the docs alone. Cloudflare's platform is powerful, but there are... nuances.\n\n**The Static Page Trap:** When I first started, I created a static Cloudflare Pages site and threw up a simple HTML \"hello world!\" file. This setup would have been great for just HTML+CSS+JS, but it was completely incompatible with Astro's server actions. After much head-scratching, I realized I needed to delete the entire Worker and create a new Pages project. This wasn't obvious from the Cloudflare interface - there's no \"hey, you've gone down the wrong path here, bud\" warning.\n\n**The Binding Maze:** Many things in Cloudflare are configured to work in one specific way or with one type of system. I spent 30 minutes debugging \"DB is not defined\" before realizing I forgot to bind the database in the dashboard. Not the code. Not wrangler.toml. The *dashboard*. In a different settings page. Cool cool cool.\n\n**The Breadcrumb Hell:** Here's the thing that caused me the most head-scratching: Cloudflare's breadcrumbs are confusing as fuck. The AI would sometimes reference navigation paths that didn't match what I was seeing. I'd say \"I don't see that option, I see Settings and Functions.\" Claude would respond, \"Oh, you're on the Functions page. You need to be on the Bindings page.\" Finding when I was on the wrong path was the tricky part, but AI is surprisingly good at picking up on where you've diverged once you give it context clues (and swear at it enough).\n\n**A Note on Instructions:** Because the breadcrumbs caused me so much confusion, I'm using more general terms to describe the actions in this tutorial. Besides, Cloudflare could push a UI update tomorrow that makes specific navigation paths irrelevant or incorrect - and that's likely the source of the issue. The AI was probably trained on out-of-date definitions of the Cloudflare platform. So I'll tell you *what* to do, but you might need to hunt around a bit to find *where* to do it.\n\n**What Is Wrangler Anyways?** Wrangler is Cloudflare's CLI tool for interacting with your local and production databases. You also have to authenticate it, which was kind of nerve-wracking. When the prompt popped up asking me to authorize it in my browser, I had a moment of \"did I really want to click that? Am I about to give away all of my data by mistake?\" It felt almost like a leap of faith. The onboarding experience could have been smoother - maybe some reassurance that this is normal and expected? Once I got past that hurdle, executing commands was pretty straightforward.\n\n**Wrangler vs Dashboard:** Some things you configure in the CLI, some in the dashboard, and it's not always obvious which. Environment variables? Dashboard. Database creation? CLI. Database binding? Dashboard. Database queries? CLI. See the pattern? Me neither.\n\n**The Thing About AI:** I built this entire blog in about 2 days of evening work. Without AI, it would've been 2 weeks of StackOverflow rabbit holes and reading scattered documentation. The Cloudflare docs are comprehensive but not always beginner-friendly. Having an AI that can read them, understand my specific situation, and generate working examples? Absolute game changer.\n\n## The Portability Factor\n\nThis was crucial to me. If Cloudflare decides to [enshittify](https://en.wikipedia.org/wiki/Enshittification) their platform (looking at you, every blogging platform from the 2000s that got acquired and killed), I can leave. Here's how:\n\n```bash\n# Export the entire database\nwrangler d1 export blog-db --output=my-data.sql\n\n# It's just SQLite, works anywhere\nsqlite3 backup.db \u003C my-data.sql\n```\n\nThe blog itself is static files + server actions. Astro can deploy to Vercel, Netlify, your own VPS, or any other Node.js host.\n\n## The Results\n\nWhat did this cost me?\n\n- **Cloudflare Pages:** $0/month\n- **D1 Database:** $0/month (under free tier limits)\n- **Turnstile:** $0/month (unlimited on free tier)\n- **Domain:** $12/year (I already owned it)\n- **Time:** ~2 evenings\n\nWhat did I get?\n\n- A blog that's actually mine\n- Comments and engagement\n- Global CDN performance\n- No ads or tracking\n- Complete portability\n- The satisfaction of building it myself\n- An extra half roll of 3D printing filament per month, based on the money I saved on hosting (I recommend SUNLU PETG)\n\n## Want to Build Your Own?\n\nIf this sounds appealing, here's the rough roadmap:\n\n### Step 1: Set Up Astro\n```bash\nnpm create astro@latest my-blog\ncd my-blog\nnpx astro add cloudflare tailwind\n```\n\n### Step 2: Choose Your Theme\n- Start from scratch (brave)\n- Use a template like [Dante](https://github.com/JustGoodUI/dante-astro-theme)\n- Steal shamelessly from blogs you like (*Ed. note: even Claude calls it \"stealing.\" Welcome to the brave new world.*)\n\n### Step 3: Add Dark Mode Properly\n```javascript\n// Prevent flash of unstyled content\nconst getThemePreference = () => {\n  if (typeof localStorage !== 'undefined' && \n      localStorage.getItem('theme')) {\n    return localStorage.getItem('theme');\n  }\n  return window.matchMedia('(prefers-color-scheme: dark)').matches \n    ? 'dark' \n    : 'light';\n};\n```\n\n### Step 4: Set Up Cloudflare D1\n```bash\n# Create database\nnpx wrangler d1 create my-blog-db\n\n# Initialize schema\nnpx wrangler d1 execute my-blog-db --file=schema.sql\n```\n\n### Step 5: Add Turnstile (No Email Required!)\n1. Get free keys from [Cloudflare Dashboard](https://dash.cloudflare.com/)\n2. Add to your comment form\n3. Verify server-side\n\n**Hot tip:** Don't collect emails unless you need them. Users appreciate it, and you avoid having the Belgian police show up to fine you for GDPR violations.\n\n**The Testing Problem:** Getting Turnstile to work locally is nearly a non-starter. Getting the production API to actually call Cloudflare's crazy spam detection system locally is a non-starter, so I recommend just using the testing version of Turnstile provided by Cloudflare. Getting it to work in a staging environment requires creating a whole new set of bindings, which wasn't obvious to me as a Cloudflare newcomer. It's also a headache for reasons I won't bore you with. I'll confess: I wasn't able to successfully test Turnstile in staging, but I decided to rely on Cloudflare's easy rollback if it didn't work in production. Once I was relatively confident the only reason it wasn't working was that I wasn't deployed to prod, I just shipped it. The luxury of owning your own project - you can break the rules when you want to.\n\n### Step 6: Build the Admin Panel\nProtect it with a secret key in environment variables:\n\n```typescript\nif (request.headers.get('X-Admin-Key') !== env.ADMIN_KEY) {\n  return new Response('Unauthorized', { status: 401 });\n}\n```\n\n**A Note on Testing:** When I first tested the admin panel, I ran into some weird serialization bugs which meant the data displayed on the admin panel was completely incorrect. The AI claimed it was actually a bug in Astro itself (which I didn't fully verify - could have been an AI hallucination). Either way, the agent eventually figured out a different way to query the admin panel data that worked, without me having to debug it manually. Reminder: you still have to test whatever the AI is making. It's not magic, it's probabilistic text generation that happens to be really good at writing code.\n\n### Step 7: Add Personality\nThis is your blog. Add gifs, weird fonts, easter eggs, a gallery of pictures of your cat - whatever makes you happy. The big platforms can't do this because they're optimizing for \"engagement metrics.\" You're optimizing for something better: making yourself smile.\n\n### Step 8: Deploy\n\nFirst, you'll need to connect your GitHub repo to Cloudflare Pages in the dashboard. Look for the option to create a new Pages project and connect it to Git. Select your repo, configure the build settings (framework preset: Astro, build command: `npm run build`, output directory: `dist`), and deploy.\n\nAfter the initial setup:\n\n```bash\ngit push\n```\n\nThat's it. Cloudflare Pages auto-deploys from your GitHub repo. \n\n**Best practice:** Push your changes to a feature branch, open a PR to `main`, and Cloudflare will automatically build a preview deployment for that branch. You get a URL like `feature-branch-name.yourproject.pages.dev` to test before merging to production. This is how you do it right - test in preview, then merge to prod.\n\n## The Bigger Picture\n\nThis blog cost me nothing but time, and I learned a bunch:\n\n- Astro's islands architecture is genius for blogs\n- Cloudflare's free tier is shockingly generous\n- SQLite is underrated for small-to-medium apps\n- AI makes learning new platforms way less painful\n- Building things yourself is deeply satisfying\n\nLet's be real: this is a vanity project. It's as much about platform ownership as it is about blogging. But here's the thing - once you're off the ground with your own platform, you have far less need for the Substacks and Mediums of the world. You're not dependent on their algorithms, their pivot to video, their \"new monetization strategy,\" or whatever they decide to do next quarter.\n\nI own the platform, the data, the design, and the destiny. That's worth the two evenings it took to build.\n\n## Try It Yourself\n\nThe source code for this blog is [public on GitHub](https://github.com/Ryan-Haines/blog). Clone it, modify it, make it yours. That's the whole point.\n\nAnd hey, if you build something cool, leave a comment below. Or don't leave a comment - I'm not your boss. But I'd love to hear what you build.\n\nJust don't spam me. Turnstile is watching. 👀\n\n---\n\n**P.S.** - Don't forget to like the post and get your party parrot!","src/content/blog/building-a-zero-cost-blog.md","9ba62768ba0901f7",{"html":148,"metadata":149},"\u003Ch2 id=\"the-domain-that-did-nothing\">The Domain That Did Nothing\u003C/h2>\n\u003Cp>I’ve owned \u003Ccode>ryanhaines.com\u003C/code> for years. And what did I do with it? Absolutely nothing productive. It just redirected to my LinkedIn profile like some kind of digital business card that cost me $12/year to maintain.\u003C/p>\n\u003Cp>Why? Because I’m \u003Cstrong>frugal\u003C/strong>. I wasn’t about to drop $5-20/month on hosting when all I wanted was a simple blog to share technical posts. That’s $60-240/year to host some markdown files and a contact form.\u003C/p>\n\u003Cp>But then Cloudflare happened. Free tier. D1 database. Pages hosting. All free. Not “free trial” or “free credits for 3 months” - actually free. So naturally, I had to build something.\u003C/p>\n\u003Ch2 id=\"the-requirements\">The Requirements\u003C/h2>\n\u003Cp>I had a few non-negotiables:\u003C/p>\n\u003Col>\n\u003Cli>\u003Cstrong>Write in Markdown\u003C/strong> - I’m a developer, not a WordPress admin\u003C/li>\n\u003Cli>\u003Cstrong>Comments and likes\u003C/strong> - Static sites are cool, but I wanted interaction\u003C/li>\n\u003Cli>\u003Cstrong>Full ownership\u003C/strong> - If Cloudflare \u003Ca href=\"https://en.wikipedia.org/wiki/Enshittification\">enshittifies\u003C/a>, I can export and leave\u003C/li>\n\u003Cli>\u003Cstrong>Zero cost\u003C/strong> - The whole point, really\u003C/li>\n\u003Cli>\u003Cstrong>No vendor lock-in\u003C/strong> - SQLite dumps are portable. Vendor-specific APIs are not.\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"why-not-use-insert-popular-service-here\">Why Not Use [Insert Popular Service Here]?\u003C/h2>\n\u003Cp>You’re probably thinking: “Why not just use Disqus? Or Giscus? Or Utterances?”\u003C/p>\n\u003Cp>Great question! Here’s why I said no:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>Disqus\u003C/strong> - Ads, tracking, owned by a ad-tech company. Hard pass.\u003C/li>\n\u003Cli>\u003Cstrong>Giscus/Utterances\u003C/strong> - Requires readers to have GitHub accounts. My mom doesn’t have a GitHub account.\u003C/li>\n\u003Cli>\u003Cstrong>Commento/Hyvor\u003C/strong> - Costs money after free tier. See “frugal” above.\u003C/li>\n\u003Cli>\u003Cstrong>Facebook Comments\u003C/strong> - lol no\u003C/li>\n\u003C/ul>\n\u003Cp>I wanted something simple: name + comment. No login, no tracking, no third-party dependencies that could vanish overnight. A form, a database, and spam protection - that’s all it takes.\u003C/p>\n\u003Ch2 id=\"the-stack\">The Stack\u003C/h2>\n\u003Cp>After some research (and by research, I mean asking Claude what would work), I landed on:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>\u003Ca href=\"https://astro.build/\">Astro\u003C/a>\u003C/strong> - Fast, markdown-friendly, modern\u003C/li>\n\u003Cli>\u003Cstrong>\u003Ca href=\"https://pages.cloudflare.com/\">Cloudflare Pages\u003C/a>\u003C/strong> - Free hosting with global CDN\u003C/li>\n\u003Cli>\u003Cstrong>\u003Ca href=\"https://developers.cloudflare.com/d1/\">Cloudflare D1\u003C/a>\u003C/strong> - Free SQLite database (5M reads/day on free tier!)\u003C/li>\n\u003Cli>\u003Cstrong>\u003Ca href=\"https://www.cloudflare.com/products/turnstile/\">Turnstile\u003C/a>\u003C/strong> - Free CAPTCHA that doesn’t make users play “find the crosswalk”\u003C/li>\n\u003Cli>\u003Cstrong>\u003Ca href=\"https://tailwindcss.com/\">Tailwind CSS\u003C/a>\u003C/strong> - Because hand-writing CSS in 2025 is for masochists\u003C/li>\n\u003C/ul>\n\u003Cp>Everything here is either standard web tech (Astro, Tailwind) or built on SQLite (D1), which means the data is portable and the code isn’t locked to any single platform.\u003C/p>\n\u003Ch2 id=\"building-it-the-fun-parts\">Building It (The Fun Parts)\u003C/h2>\n\u003Ch3 id=\"1-theme-setup\">1. Theme Setup\u003C/h3>\n\u003Cp>First things first: I’m not a designer. So I found the beautiful \u003Ca href=\"https://github.com/JustGoodUI/dante-astro-theme\">Dante Astro Theme\u003C/a> and made it my own.\u003C/p>\n\u003Cp>\u003Cstrong>Important lesson:\u003C/strong> If you add dark mode, handle the flash of unstyled content! Nothing says “amateur hour” like your site flickering between light and dark on every page load. Astro makes this easy with inline theme scripts that run before the page renders.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"astro\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">script\u003C/span>\u003Cspan style=\"color:#B392F0\"> is:inline\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  // This runs BEFORE page renders\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> theme\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> localStorage.\u003C/span>\u003Cspan style=\"color:#B392F0\">getItem\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'theme'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">||\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'light'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  document.documentElement.classList.\u003C/span>\u003Cspan style=\"color:#B392F0\">add\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(theme);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">script\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2-the-commenting-system\">2. The Commenting System\u003C/h3>\n\u003Cp>This was the meaty part. I built a custom system with:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>Sidebar panel\u003C/strong> - Comments slide in from the right (Medium-style)\u003C/li>\n\u003Cli>\u003Cstrong>No email collection\u003C/strong> - I’m not a marketing agency\u003C/li>\n\u003Cli>\u003Cstrong>Rate limiting\u003C/strong> - 2 comments per 5 minutes per IP\u003C/li>\n\u003Cli>\u003Cstrong>Turnstile CAPTCHA\u003C/strong> - Stops the bots\u003C/li>\n\u003Cli>\u003Cstrong>Spam detection\u003C/strong> - Pattern matching for common spam phrases\u003C/li>\n\u003C/ul>\n\u003Cp>The database schema is dead simple:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sql\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">CREATE\u003C/span>\u003Cspan style=\"color:#F97583\"> TABLE\u003C/span>\u003Cspan style=\"color:#B392F0\"> comments\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  id \u003C/span>\u003Cspan style=\"color:#F97583\">INTEGER\u003C/span>\u003Cspan style=\"color:#F97583\"> PRIMARY KEY\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  post_slug \u003C/span>\u003Cspan style=\"color:#F97583\">TEXT\u003C/span>\u003Cspan style=\"color:#F97583\"> NOT NULL\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  author_name \u003C/span>\u003Cspan style=\"color:#F97583\">TEXT\u003C/span>\u003Cspan style=\"color:#F97583\"> NOT NULL\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  content \u003C/span>\u003Cspan style=\"color:#F97583\">TEXT\u003C/span>\u003Cspan style=\"color:#F97583\"> NOT NULL\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  created_at \u003C/span>\u003Cspan style=\"color:#F97583\">INTEGER\u003C/span>\u003Cspan style=\"color:#F97583\"> NOT NULL\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  ip_address \u003C/span>\u003Cspan style=\"color:#F97583\">TEXT\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  approved \u003C/span>\u003Cspan style=\"color:#F97583\">INTEGER\u003C/span>\u003Cspan style=\"color:#F97583\"> DEFAULT\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Standard SQLite with no foreign keys to proprietary systems.\u003C/p>\n\u003Ch3 id=\"3-admin-panel\">3. Admin Panel\u003C/h3>\n\u003Cp>Because trolls exist, I built a moderation panel at \u003Ccode>/admin/moderate\u003C/code>. It’s protected by an admin key (randomly generated, stored in environment variables) and lets me:\u003C/p>\n\u003Cul>\n\u003Cli>View all comments\u003C/li>\n\u003Cli>Approve/reject/delete\u003C/li>\n\u003Cli>See spam patterns\u003C/li>\n\u003Cli>Check rate limit stats\u003C/li>\n\u003C/ul>\n\u003Cp>It’s basic but functional. And since it’s just SQL queries, I can also moderate via command line if needed:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">wrangler\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> d1\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> execute\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> blog-db\u003C/span>\u003Cspan style=\"color:#79B8FF\"> --remote\u003C/span>\u003Cspan style=\"color:#79B8FF\"> \\\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  --command\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"DELETE FROM comments WHERE id = 666\"\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"4-party-parrots\">4. Party Parrots \u003Cimg src=\"/parrot.gif\" alt=\"parrot\" style=\"display: inline; height: 30px; width: auto; vertical-align: middle;\">\u003C/h3>\n\u003Cp>Here’s where I added personality. I’m a card-carrying member of the \u003Ca href=\"https://cultofthepartyparrot.com/\">Cult of the Party Parrot\u003C/a>, so naturally, when you like a post on my blog, you get rewarded with party parrots.\u003C/p>\n\u003Cp>You can “like” up to 50 times per post (like Medium). Trust me, you’ll know when you’ve reached the limit.\u003C/p>\n\u003Cp>This kind of whimsy is what makes personal blogs fun. Big platforms would A/B test this to death. I just added it because it makes me smile.\u003C/p>\n\u003Ch3 id=\"5-emergency-controls\">5. Emergency Controls\u003C/h3>\n\u003Cp>Planning for the worst is good practice. I added:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>Extreme rate limiting\u003C/strong> - Can dial it down to 1 comment per hour if needed\u003C/li>\n\u003Cli>\u003Cstrong>Manual approval mode\u003C/strong> - One line change to require all comments be approved\u003C/li>\n\u003Cli>\u003Cstrong>Spam patterns\u003C/strong> - Auto-detect and silently reject obvious spam\u003C/li>\n\u003Cli>\u003Cstrong>Kill switch\u003C/strong> - Can disable comments entirely in 30 seconds\u003C/li>\n\u003C/ul>\n\u003Cp>Hopefully I never need these. But it’s nice to know they’re there.\u003C/p>\n\u003Ch2 id=\"the-wtf-moments-of-learning-cloudflare\">The WTF Moments of Learning Cloudflare\u003C/h2>\n\u003Cp>I weep for the people who were forced to learn this platform from reading the docs alone. Cloudflare’s platform is powerful, but there are… nuances.\u003C/p>\n\u003Cp>\u003Cstrong>The Static Page Trap:\u003C/strong> When I first started, I created a static Cloudflare Pages site and threw up a simple HTML “hello world!” file. This setup would have been great for just HTML+CSS+JS, but it was completely incompatible with Astro’s server actions. After much head-scratching, I realized I needed to delete the entire Worker and create a new Pages project. This wasn’t obvious from the Cloudflare interface - there’s no “hey, you’ve gone down the wrong path here, bud” warning.\u003C/p>\n\u003Cp>\u003Cstrong>The Binding Maze:\u003C/strong> Many things in Cloudflare are configured to work in one specific way or with one type of system. I spent 30 minutes debugging “DB is not defined” before realizing I forgot to bind the database in the dashboard. Not the code. Not wrangler.toml. The \u003Cem>dashboard\u003C/em>. In a different settings page. Cool cool cool.\u003C/p>\n\u003Cp>\u003Cstrong>The Breadcrumb Hell:\u003C/strong> Here’s the thing that caused me the most head-scratching: Cloudflare’s breadcrumbs are confusing as fuck. The AI would sometimes reference navigation paths that didn’t match what I was seeing. I’d say “I don’t see that option, I see Settings and Functions.” Claude would respond, “Oh, you’re on the Functions page. You need to be on the Bindings page.” Finding when I was on the wrong path was the tricky part, but AI is surprisingly good at picking up on where you’ve diverged once you give it context clues (and swear at it enough).\u003C/p>\n\u003Cp>\u003Cstrong>A Note on Instructions:\u003C/strong> Because the breadcrumbs caused me so much confusion, I’m using more general terms to describe the actions in this tutorial. Besides, Cloudflare could push a UI update tomorrow that makes specific navigation paths irrelevant or incorrect - and that’s likely the source of the issue. The AI was probably trained on out-of-date definitions of the Cloudflare platform. So I’ll tell you \u003Cem>what\u003C/em> to do, but you might need to hunt around a bit to find \u003Cem>where\u003C/em> to do it.\u003C/p>\n\u003Cp>\u003Cstrong>What Is Wrangler Anyways?\u003C/strong> Wrangler is Cloudflare’s CLI tool for interacting with your local and production databases. You also have to authenticate it, which was kind of nerve-wracking. When the prompt popped up asking me to authorize it in my browser, I had a moment of “did I really want to click that? Am I about to give away all of my data by mistake?” It felt almost like a leap of faith. The onboarding experience could have been smoother - maybe some reassurance that this is normal and expected? Once I got past that hurdle, executing commands was pretty straightforward.\u003C/p>\n\u003Cp>\u003Cstrong>Wrangler vs Dashboard:\u003C/strong> Some things you configure in the CLI, some in the dashboard, and it’s not always obvious which. Environment variables? Dashboard. Database creation? CLI. Database binding? Dashboard. Database queries? CLI. See the pattern? Me neither.\u003C/p>\n\u003Cp>\u003Cstrong>The Thing About AI:\u003C/strong> I built this entire blog in about 2 days of evening work. Without AI, it would’ve been 2 weeks of StackOverflow rabbit holes and reading scattered documentation. The Cloudflare docs are comprehensive but not always beginner-friendly. Having an AI that can read them, understand my specific situation, and generate working examples? Absolute game changer.\u003C/p>\n\u003Ch2 id=\"the-portability-factor\">The Portability Factor\u003C/h2>\n\u003Cp>This was crucial to me. If Cloudflare decides to \u003Ca href=\"https://en.wikipedia.org/wiki/Enshittification\">enshittify\u003C/a> their platform (looking at you, every blogging platform from the 2000s that got acquired and killed), I can leave. Here’s how:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"># Export the entire database\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">wrangler\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> d1\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> export\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> blog-db\u003C/span>\u003Cspan style=\"color:#79B8FF\"> --output=my-data.sql\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"># It's just SQLite, works anywhere\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">sqlite3\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> backup.db\u003C/span>\u003Cspan style=\"color:#F97583\"> &#x3C;\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> my-data.sql\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>The blog itself is static files + server actions. Astro can deploy to Vercel, Netlify, your own VPS, or any other Node.js host.\u003C/p>\n\u003Ch2 id=\"the-results\">The Results\u003C/h2>\n\u003Cp>What did this cost me?\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>Cloudflare Pages:\u003C/strong> $0/month\u003C/li>\n\u003Cli>\u003Cstrong>D1 Database:\u003C/strong> $0/month (under free tier limits)\u003C/li>\n\u003Cli>\u003Cstrong>Turnstile:\u003C/strong> $0/month (unlimited on free tier)\u003C/li>\n\u003Cli>\u003Cstrong>Domain:\u003C/strong> $12/year (I already owned it)\u003C/li>\n\u003Cli>\u003Cstrong>Time:\u003C/strong> ~2 evenings\u003C/li>\n\u003C/ul>\n\u003Cp>What did I get?\u003C/p>\n\u003Cul>\n\u003Cli>A blog that’s actually mine\u003C/li>\n\u003Cli>Comments and engagement\u003C/li>\n\u003Cli>Global CDN performance\u003C/li>\n\u003Cli>No ads or tracking\u003C/li>\n\u003Cli>Complete portability\u003C/li>\n\u003Cli>The satisfaction of building it myself\u003C/li>\n\u003Cli>An extra half roll of 3D printing filament per month, based on the money I saved on hosting (I recommend SUNLU PETG)\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"want-to-build-your-own\">Want to Build Your Own?\u003C/h2>\n\u003Cp>If this sounds appealing, here’s the rough roadmap:\u003C/p>\n\u003Ch3 id=\"step-1-set-up-astro\">Step 1: Set Up Astro\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">npm\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> create\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> astro@latest\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> my-blog\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">cd\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> my-blog\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">npx\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> astro\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> add\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> cloudflare\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> tailwind\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"step-2-choose-your-theme\">Step 2: Choose Your Theme\u003C/h3>\n\u003Cul>\n\u003Cli>Start from scratch (brave)\u003C/li>\n\u003Cli>Use a template like \u003Ca href=\"https://github.com/JustGoodUI/dante-astro-theme\">Dante\u003C/a>\u003C/li>\n\u003Cli>Steal shamelessly from blogs you like (\u003Cem>Ed. note: even Claude calls it “stealing.” Welcome to the brave new world.\u003C/em>)\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"step-3-add-dark-mode-properly\">Step 3: Add Dark Mode Properly\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Prevent flash of unstyled content\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">const\u003C/span>\u003Cspan style=\"color:#B392F0\"> getThemePreference\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> () \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#F97583\">typeof\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> localStorage \u003C/span>\u003Cspan style=\"color:#F97583\">!==\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'undefined'\u003C/span>\u003Cspan style=\"color:#F97583\"> &#x26;&#x26;\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      localStorage.\u003C/span>\u003Cspan style=\"color:#B392F0\">getItem\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'theme'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> localStorage.\u003C/span>\u003Cspan style=\"color:#B392F0\">getItem\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'theme'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> window.\u003C/span>\u003Cspan style=\"color:#B392F0\">matchMedia\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'(prefers-color-scheme: dark)'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">).matches \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    ?\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'dark'\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    :\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'light'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">};\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"step-4-set-up-cloudflare-d1\">Step 4: Set Up Cloudflare D1\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"># Create database\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">npx\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> wrangler\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> d1\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> create\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> my-blog-db\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"># Initialize schema\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">npx\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> wrangler\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> d1\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> execute\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> my-blog-db\u003C/span>\u003Cspan style=\"color:#79B8FF\"> --file=schema.sql\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"step-5-add-turnstile-no-email-required\">Step 5: Add Turnstile (No Email Required!)\u003C/h3>\n\u003Col>\n\u003Cli>Get free keys from \u003Ca href=\"https://dash.cloudflare.com/\">Cloudflare Dashboard\u003C/a>\u003C/li>\n\u003Cli>Add to your comment form\u003C/li>\n\u003Cli>Verify server-side\u003C/li>\n\u003C/ol>\n\u003Cp>\u003Cstrong>Hot tip:\u003C/strong> Don’t collect emails unless you need them. Users appreciate it, and you avoid having the Belgian police show up to fine you for GDPR violations.\u003C/p>\n\u003Cp>\u003Cstrong>The Testing Problem:\u003C/strong> Getting Turnstile to work locally is nearly a non-starter. Getting the production API to actually call Cloudflare’s crazy spam detection system locally is a non-starter, so I recommend just using the testing version of Turnstile provided by Cloudflare. Getting it to work in a staging environment requires creating a whole new set of bindings, which wasn’t obvious to me as a Cloudflare newcomer. It’s also a headache for reasons I won’t bore you with. I’ll confess: I wasn’t able to successfully test Turnstile in staging, but I decided to rely on Cloudflare’s easy rollback if it didn’t work in production. Once I was relatively confident the only reason it wasn’t working was that I wasn’t deployed to prod, I just shipped it. The luxury of owning your own project - you can break the rules when you want to.\u003C/p>\n\u003Ch3 id=\"step-6-build-the-admin-panel\">Step 6: Build the Admin Panel\u003C/h3>\n\u003Cp>Protect it with a secret key in environment variables:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"typescript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (request.headers.\u003C/span>\u003Cspan style=\"color:#B392F0\">get\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'X-Admin-Key'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">!==\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> env.\u003C/span>\u003Cspan style=\"color:#79B8FF\">ADMIN_KEY\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#F97583\"> new\u003C/span>\u003Cspan style=\"color:#B392F0\"> Response\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Unauthorized'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, { status: \u003C/span>\u003Cspan style=\"color:#79B8FF\">401\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>\u003Cstrong>A Note on Testing:\u003C/strong> When I first tested the admin panel, I ran into some weird serialization bugs which meant the data displayed on the admin panel was completely incorrect. The AI claimed it was actually a bug in Astro itself (which I didn’t fully verify - could have been an AI hallucination). Either way, the agent eventually figured out a different way to query the admin panel data that worked, without me having to debug it manually. Reminder: you still have to test whatever the AI is making. It’s not magic, it’s probabilistic text generation that happens to be really good at writing code.\u003C/p>\n\u003Ch3 id=\"step-7-add-personality\">Step 7: Add Personality\u003C/h3>\n\u003Cp>This is your blog. Add gifs, weird fonts, easter eggs, a gallery of pictures of your cat - whatever makes you happy. The big platforms can’t do this because they’re optimizing for “engagement metrics.” You’re optimizing for something better: making yourself smile.\u003C/p>\n\u003Ch3 id=\"step-8-deploy\">Step 8: Deploy\u003C/h3>\n\u003Cp>First, you’ll need to connect your GitHub repo to Cloudflare Pages in the dashboard. Look for the option to create a new Pages project and connect it to Git. Select your repo, configure the build settings (framework preset: Astro, build command: \u003Ccode>npm run build\u003C/code>, output directory: \u003Ccode>dist\u003C/code>), and deploy.\u003C/p>\n\u003Cp>After the initial setup:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">git\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> push\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>That’s it. Cloudflare Pages auto-deploys from your GitHub repo.\u003C/p>\n\u003Cp>\u003Cstrong>Best practice:\u003C/strong> Push your changes to a feature branch, open a PR to \u003Ccode>main\u003C/code>, and Cloudflare will automatically build a preview deployment for that branch. You get a URL like \u003Ccode>feature-branch-name.yourproject.pages.dev\u003C/code> to test before merging to production. This is how you do it right - test in preview, then merge to prod.\u003C/p>\n\u003Ch2 id=\"the-bigger-picture\">The Bigger Picture\u003C/h2>\n\u003Cp>This blog cost me nothing but time, and I learned a bunch:\u003C/p>\n\u003Cul>\n\u003Cli>Astro’s islands architecture is genius for blogs\u003C/li>\n\u003Cli>Cloudflare’s free tier is shockingly generous\u003C/li>\n\u003Cli>SQLite is underrated for small-to-medium apps\u003C/li>\n\u003Cli>AI makes learning new platforms way less painful\u003C/li>\n\u003Cli>Building things yourself is deeply satisfying\u003C/li>\n\u003C/ul>\n\u003Cp>Let’s be real: this is a vanity project. It’s as much about platform ownership as it is about blogging. But here’s the thing - once you’re off the ground with your own platform, you have far less need for the Substacks and Mediums of the world. You’re not dependent on their algorithms, their pivot to video, their “new monetization strategy,” or whatever they decide to do next quarter.\u003C/p>\n\u003Cp>I own the platform, the data, the design, and the destiny. That’s worth the two evenings it took to build.\u003C/p>\n\u003Ch2 id=\"try-it-yourself\">Try It Yourself\u003C/h2>\n\u003Cp>The source code for this blog is \u003Ca href=\"https://github.com/Ryan-Haines/blog\">public on GitHub\u003C/a>. Clone it, modify it, make it yours. That’s the whole point.\u003C/p>\n\u003Cp>And hey, if you build something cool, leave a comment below. Or don’t leave a comment - I’m not your boss. But I’d love to hear what you build.\u003C/p>\n\u003Cp>Just don’t spam me. Turnstile is watching. 👀\u003C/p>\n\u003Chr>\n\u003Cp>\u003Cstrong>P.S.\u003C/strong> - Don’t forget to like the post and get your party parrot!\u003C/p>",{"headings":150,"localImagePaths":223,"remoteImagePaths":224,"frontmatter":225,"imagePaths":228},[151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220],{"depth":30,"slug":152,"text":153},"the-domain-that-did-nothing","The Domain That Did Nothing",{"depth":30,"slug":155,"text":156},"the-requirements","The Requirements",{"depth":30,"slug":158,"text":159},"why-not-use-insert-popular-service-here","Why Not Use [Insert Popular Service Here]?",{"depth":30,"slug":161,"text":162},"the-stack","The Stack",{"depth":30,"slug":164,"text":165},"building-it-the-fun-parts","Building It (The Fun Parts)",{"depth":40,"slug":167,"text":168},"1-theme-setup","1. Theme Setup",{"depth":40,"slug":170,"text":171},"2-the-commenting-system","2. The Commenting System",{"depth":40,"slug":173,"text":174},"3-admin-panel","3. Admin Panel",{"depth":40,"slug":176,"text":177},"4-party-parrots","4. Party Parrots ",{"depth":40,"slug":179,"text":180},"5-emergency-controls","5. Emergency Controls",{"depth":30,"slug":182,"text":183},"the-wtf-moments-of-learning-cloudflare","The WTF Moments of Learning Cloudflare",{"depth":30,"slug":185,"text":186},"the-portability-factor","The Portability Factor",{"depth":30,"slug":188,"text":189},"the-results","The Results",{"depth":30,"slug":191,"text":192},"want-to-build-your-own","Want to Build Your Own?",{"depth":40,"slug":194,"text":195},"step-1-set-up-astro","Step 1: Set Up Astro",{"depth":40,"slug":197,"text":198},"step-2-choose-your-theme","Step 2: Choose Your Theme",{"depth":40,"slug":200,"text":201},"step-3-add-dark-mode-properly","Step 3: Add Dark Mode Properly",{"depth":40,"slug":203,"text":204},"step-4-set-up-cloudflare-d1","Step 4: Set Up Cloudflare D1",{"depth":40,"slug":206,"text":207},"step-5-add-turnstile-no-email-required","Step 5: Add Turnstile (No Email Required!)",{"depth":40,"slug":209,"text":210},"step-6-build-the-admin-panel","Step 6: Build the Admin Panel",{"depth":40,"slug":212,"text":213},"step-7-add-personality","Step 7: Add Personality",{"depth":40,"slug":215,"text":216},"step-8-deploy","Step 8: Deploy",{"depth":30,"slug":218,"text":219},"the-bigger-picture","The Bigger Picture",{"depth":30,"slug":221,"text":222},"try-it-yourself","Try It Yourself",[],[],{"title":137,"description":138,"pubDate":226,"tags":227},["Date","2025-10-28T00:00:00.000Z"],[141,142,143,21],[],"building-a-zero-cost-blog.md"]